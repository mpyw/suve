// Code generated by "stringer -type=CanonicalVersionType,VersionRequirementType -output=versioning_string.gen.go"; DO NOT EDIT.

package versioning

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CanonicalVersionTypeUnknown-0]
	_ = x[CanonicalVersionTypeNumber-1]
	_ = x[CanonicalVersionTypeUUID-2]
}

const _CanonicalVersionType_name = "CanonicalVersionTypeUnknownCanonicalVersionTypeNumberCanonicalVersionTypeUUID"

var _CanonicalVersionType_index = [...]uint8{0, 27, 53, 77}

func (i CanonicalVersionType) String() string {
	if i < 0 || i >= CanonicalVersionType(len(_CanonicalVersionType_index)-1) {
		return "CanonicalVersionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CanonicalVersionType_name[_CanonicalVersionType_index[i]:_CanonicalVersionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VersionRequirementTypeUnknown-0]
	_ = x[VersionRequirementTypeCanonical-1]
	_ = x[VersionRequirementTypeStageOrLabel-2]
}

const _VersionRequirementType_name = "VersionRequirementTypeUnknownVersionRequirementTypeCanonicalVersionRequirementTypeStageOrLabel"

var _VersionRequirementType_index = [...]uint8{0, 29, 60, 94}

func (i VersionRequirementType) String() string {
	if i < 0 || i >= VersionRequirementType(len(_VersionRequirementType_index)-1) {
		return "VersionRequirementType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VersionRequirementType_name[_VersionRequirementType_index[i]:_VersionRequirementType_index[i+1]]
}
